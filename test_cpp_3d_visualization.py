#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ C++ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ 3D –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å OpenCASCADE
"""

import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.insert(0, str(Path(__file__).parent))

def test_cpp_3d_visualization():
    """–¢–µ—Å—Ç C++ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ 3D –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ C++ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ 3D –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å OpenCASCADE")
    print("=" * 60)
    
    try:
        # –ü–æ–ø—ã—Ç–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ C++ –º–æ–¥—É–ª—è
        print("üì¶ –ò–º–ø–æ—Ä—Ç C++ –º–æ–¥—É–ª—è thesolution_operations...")
        import thesolution_operations as ops
        print("‚úÖ C++ –º–æ–¥—É–ª—å —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω!")
        
        # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –≥–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏—Ö –ø—Ä–∏–º–∏—Ç–∏–≤–æ–≤
        print("\nüî∑ –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –≥–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏—Ö –ø—Ä–∏–º–∏—Ç–∏–≤–æ–≤:")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –∫—É–±–∞
        box = ops.create_box("–¢–µ—Å—Ç–æ–≤—ã–π –∫—É–±", 10.0, 10.0, 10.0)
        print(f"‚úÖ –ö—É–± —Å–æ–∑–¥–∞–Ω: {box.getName()}")
        print(f"   –†–∞–∑–º–µ—Ä—ã: {box.getWidth()} x {box.getHeight()} x {box.getDepth()}")
        print(f"   –û–±—ä–µ–º: {box.getVolume():.2f}")
        print(f"   –ü–ª–æ—â–∞–¥—å –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏: {box.getSurfaceArea():.2f}")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ñ–µ—Ä—ã
        sphere = ops.create_sphere("–¢–µ—Å—Ç–æ–≤–∞—è —Å—Ñ–µ—Ä–∞", 5.0)
        print(f"‚úÖ –°—Ñ–µ—Ä–∞ —Å–æ–∑–¥–∞–Ω–∞: {sphere.getName()}")
        print(f"   –†–∞–¥–∏—É—Å: {sphere.getRadius()}")
        print(f"   –û–±—ä–µ–º: {sphere.getVolume():.2f}")
        print(f"   –ü–ª–æ—â–∞–¥—å –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏: {sphere.getSurfaceArea():.2f}")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —Ü–∏–ª–∏–Ω–¥—Ä–∞
        cylinder = ops.create_cylinder("–¢–µ—Å—Ç–æ–≤—ã–π —Ü–∏–ª–∏–Ω–¥—Ä", 3.0, 8.0)
        print(f"‚úÖ –¶–∏–ª–∏–Ω–¥—Ä —Å–æ–∑–¥–∞–Ω: {cylinder.getName()}")
        print(f"   –†–∞–¥–∏—É—Å: {cylinder.getRadius()}, –í—ã—Å–æ—Ç–∞: {cylinder.getHeight()}")
        print(f"   –û–±—ä–µ–º: {cylinder.getVolume():.2f}")
        print(f"   –ü–ª–æ—â–∞–¥—å –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏: {cylinder.getSurfaceArea():.2f}")
        
        # –¢–µ—Å—Ç —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–π
        print("\nüîÑ –¢–µ—Å—Ç —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–π:")
        box.translate(5.0, 0.0, 0.0)
        print(f"‚úÖ –ö—É–± –ø–µ—Ä–µ–º–µ—â–µ–Ω –Ω–∞ (5, 0, 0)")
        
        sphere.rotate(45.0, 0.0, 0.0, 1.0)
        print(f"‚úÖ –°—Ñ–µ—Ä–∞ –ø–æ–≤–µ—Ä–Ω—É—Ç–∞ –Ω–∞ 45¬∞ –≤–æ–∫—Ä—É–≥ –æ—Å–∏ Z")
        
        cylinder.scale(1.5, 1.5, 1.5)
        print(f"‚úÖ –¶–∏–ª–∏–Ω–¥—Ä –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω –≤ 1.5 —Ä–∞–∑–∞")
        
        # –¢–µ—Å—Ç –∏–µ—Ä–∞—Ä—Ö–∏–∏ –æ–±—ä–µ–∫—Ç–æ–≤
        print("\nüå≥ –¢–µ—Å—Ç –∏–µ—Ä–∞—Ä—Ö–∏–∏ –æ–±—ä–µ–∫—Ç–æ–≤:")
        assembly = ops.create_assembly("–¢–µ—Å—Ç–æ–≤–∞—è —Å–±–æ—Ä–∫–∞")
        assembly.addComponent(box)
        assembly.addComponent(sphere)
        assembly.addComponent(cylinder)
        print(f"‚úÖ –°–±–æ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–∞: {assembly.getName()}")
        print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤: {len(assembly.getComponents())}")
        print(f"   –û–±—â–∏–π –æ–±—ä–µ–º: {assembly.getVolume():.2f}")
        
        # –¢–µ—Å—Ç SceneManager
        print("\nüé¨ –¢–µ—Å—Ç SceneManager:")
        scene_manager = ops.SceneManager()
        scene_manager.addObject(box.getShape(), "–ö—É–± –≤ —Å—Ü–µ–Ω–µ")
        scene_manager.addObject(sphere.getShape(), "–°—Ñ–µ—Ä–∞ –≤ —Å—Ü–µ–Ω–µ")
        scene_manager.addObject(cylinder.getShape(), "–¶–∏–ª–∏–Ω–¥—Ä –≤ —Å—Ü–µ–Ω–µ")
        print(f"‚úÖ –û–±—ä–µ–∫—Ç—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Å—Ü–µ–Ω—É")
        print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—ä–µ–∫—Ç–æ–≤: {len(scene_manager.getObjects())}")
        
        # –¢–µ—Å—Ç —ç–∫—Å–ø–æ—Ä—Ç–∞
        print("\nüíæ –¢–µ—Å—Ç —ç–∫—Å–ø–æ—Ä—Ç–∞:")
        try:
            scene_manager.exportScene("test_scene.step")
            print("‚úÖ –°—Ü–µ–Ω–∞ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞ –≤ STEP —Ñ–∞–π–ª")
        except Exception as e:
            print(f"‚ö†Ô∏è –≠–∫—Å–ø–æ—Ä—Ç STEP: {e}")
        
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã C++ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        return True
        
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ C++ –º–æ–¥—É–ª—è: {e}")
        print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ C++ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å–æ–±—Ä–∞–Ω—ã –∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        return False
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        return False

def test_visualization_widget():
    """–¢–µ—Å—Ç –≤–∏–¥–∂–µ—Ç–∞ 3D –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏"""
    print("\nüé® –¢–µ—Å—Ç –≤–∏–¥–∂–µ—Ç–∞ 3D –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏:")
    
    try:
        from PySide6.QtWidgets import QApplication, QMainWindow, QVBoxLayout, QWidget
        from PySide6.QtCore import Qt
        import thesolution_operations as ops
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        app = QApplication.instance()
        if app is None:
            app = QApplication(sys.argv)
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞
        window = QMainWindow()
        window.setWindowTitle("TheSolution 3D Visualization Test")
        window.resize(800, 600)
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–≥–æ –≤–∏–¥–∂–µ—Ç–∞
        central_widget = QWidget()
        window.setCentralWidget(central_widget)
        
        # –°–æ–∑–¥–∞–Ω–∏–µ layout
        layout = QVBoxLayout(central_widget)
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–∂–µ—Ç–∞ 3D –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏
        viz_widget = ops.Visualization3D()
        layout.addWidget(viz_widget)
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
        box = ops.create_box("–¢–µ—Å—Ç–æ–≤—ã–π –∫—É–±", 10.0, 10.0, 10.0)
        sphere = ops.create_sphere("–¢–µ—Å—Ç–æ–≤–∞—è —Å—Ñ–µ—Ä–∞", 5.0)
        cylinder = ops.create_cylinder("–¢–µ—Å—Ç–æ–≤—ã–π —Ü–∏–ª–∏–Ω–¥—Ä", 3.0, 8.0)
        
        viz_widget.addShape(box.getShape(), "–ö—É–±")
        viz_widget.addShape(sphere.getShape(), "–°—Ñ–µ—Ä–∞")
        viz_widget.addShape(cylinder.getShape(), "–¶–∏–ª–∏–Ω–¥—Ä")
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        viz_widget.setShadedMode(True)
        viz_widget.setLighting(True)
        viz_widget.setBackgroundColor(Qt.white)
        
        print("‚úÖ –í–∏–¥–∂–µ—Ç 3D –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω")
        print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –æ–±—ä–µ–∫—Ç—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã")
        print("‚úÖ –û–∫–Ω–æ –æ—Ç–∫—Ä—ã—Ç–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        
        # –ü–æ–∫–∞–∑ –æ–∫–Ω–∞
        window.show()
        
        # –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        print("üîÑ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–∑–∞–∫—Ä–æ–π—Ç–µ –æ–∫–Ω–æ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è)...")
        app.exec()
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –≤–∏–¥–∂–µ—Ç–∞: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ C++ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ 3D –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è TheSolution")
    print("=" * 70)
    
    # –¢–µ—Å—Ç –±–∞–∑–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
    if not test_cpp_3d_visualization():
        print("\nüíî –ë–∞–∑–æ–≤—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–±–æ—Ä–∫—É C++ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤.")
        return False
    
    # –¢–µ—Å—Ç –≤–∏–¥–∂–µ—Ç–∞ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏
    print("\n" + "=" * 70)
    print("üé® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∏–¥–∂–µ—Ç–∞ 3D –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏...")
    
    response = input("–ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç –≤–∏–¥–∂–µ—Ç–∞ 3D –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏? (y/n): ").lower().strip()
    if response in ['y', 'yes', '–¥–∞', '–¥']:
        test_visualization_widget()
    
    print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    return True

if __name__ == "__main__":
    main()
