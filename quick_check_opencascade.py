#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ OpenCASCADE
"""

import sys
import subprocess
import os

def check_conda_opencascade():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å OpenCASCADE –≤ conda"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ OpenCASCADE –≤ conda...")
    
    try:
        result = subprocess.run("conda list | grep -i opencascade", shell=True, capture_output=True, text=True)
        if result.returncode == 0 and result.stdout.strip():
            print("‚úÖ OpenCASCADE –Ω–∞–π–¥–µ–Ω –≤ conda:")
            print(result.stdout.strip())
            return True
        else:
            print("‚ùå OpenCASCADE –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ conda")
            return False
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ conda: {e}")
        return False

def check_pip_opencascade():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å OpenCASCADE –≤ pip"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ OpenCASCADE –≤ pip...")
    
    try:
        result = subprocess.run("pip list | grep -i opencascade", shell=True, capture_output=True, text=True)
        if result.returncode == 0 and result.stdout.strip():
            print("‚úÖ OpenCASCADE –Ω–∞–π–¥–µ–Ω –≤ pip:")
            print(result.stdout.strip())
            return True
        else:
            print("‚ùå OpenCASCADE –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ pip")
            return False
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ pip: {e}")
        return False

def check_system_opencascade():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É OpenCASCADE"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ OpenCASCADE...")
    
    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    env_vars = ['OpenCASCADE_DIR', 'OCCT_DIR', 'OpenCASCADE_ROOT']
    for var in env_vars:
        value = os.environ.get(var)
        if value:
            print(f"‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è {var}: {value}")
            return True
    
    print("‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è OpenCASCADE –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    return False

def suggest_installation():
    """–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫—É"""
    print("\nüí° –î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ OpenCASCADE –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:")
    print("1. conda install -c conda-forge opencascade")
    print("2. –ò–ª–∏ —Å–∫–∞—á–∞–π—Ç–µ —Å https://dev.opencascade.org/release")

def main():
    print("üöÄ –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ OpenCASCADE")
    print("=" * 40)
    
    conda_ok = check_conda_opencascade()
    pip_ok = check_pip_opencascade()
    system_ok = check_system_opencascade()
    
    print("\n" + "=" * 40)
    if conda_ok or pip_ok or system_ok:
        print("‚úÖ OpenCASCADE –Ω–∞–π–¥–µ–Ω! –ú–æ–∂–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É.")
    else:
        print("‚ùå OpenCASCADE –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ –¥–ª—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏.")
        suggest_installation()

if __name__ == "__main__":
    main()
